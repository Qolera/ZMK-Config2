//
// Copyright (c) 2024 The ZMK Contributors
//
// SPDX-License-Identifier: MIT
//

//               @@   @@@@@@@@@@@@  @@@@@@@@@@@@@@@@           @@@@         
//             @@@@@@         @@@@@@ @@@@@      @@@@           @@@@         
//           .@@@@@@@@           @@@@  @@@@     @@@@           @@@@         
//          @@@@   @@@@@         @@@@   @@@@@   @@@@           @@@@         
//        .@@@@      @@@@        @@@@ ,@@@@.    @@@@          @@@@          
//       @@@@         @@@@@   @@@@@@ @@@@@       @@@@@      @@@@@           
//     ,@@@@      @@@@@@@@@@@@@@@@ ,@@@@@@@@@@@@@  @@@@@@@@@@@@  
//
//      Custom keyboards, ergonomic and personalized interfaces 

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_36keys.h"
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/trackball_pim447.h>



// euro sign
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)
// ene ENE sign
ZMK_UNICODE_PAIR(ene, N0, N0, F, N1, N0, N0, D, N1)
// Código Unicode: "¿" es U+00BF y "¡" es U+00A1
ZMK_UNICODE_PAIR(inverted_punct, N0, N0, B, F, N0, N0, A, 1)


/ {
    behaviors {
        rgb_encoder_bri: rgb_encoder_brightness {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };
        
        rgb_encoder_hue: rgb_encoder_hue {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };
        
        rgb_encoder_eff: rgb_encoder_effect {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;
        };

        rgb_encoder_spd: rgb_encoder_speed {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_SPI>, <&rgb_ug RGB_SPD>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers"; 
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
 
        default_layer {
            display-name = "ADEU";
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//                                             |  ESC  |  1! |  2@ |  3#  |  4$  |  5%  |                   |  6^  |  7&   |  8*   |  9(  |   0)  |  /?   |
//                                             |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
//                                             | SHIFT |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   Ñ   |   ’”  |
//                                             | CTRL  |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | PLAY  |  N   |  M    |  ,<   |  .>  |   -_  | SHIFT |
//                                                           | GUI | ALT  | CTRL | LOWER|  SPACE |  | ENTER | RAISE|  ALT  | CTRL  | GUI  |
            bindings = <
&kp ESC      &kp N1       &kp N2       &kp N3          &kp N4          &kp N5                                         &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp SLASH
&kp TAB      &kp Q        &kp W        &kp E           &kp R           &kp T                                          &kp Y           &kp U           &kp I           &kp O           &kp P           &kp BSPC
&kp LSHFT    &kp A        &kp S        &kp D           &kp F           &kp G                                          &kp H           &kp J           &kp K           &kp L           &ene            &kp RA(SQT)
&kp LCTRL    &kp Z        &kp X        &kp C           &kp V           &kp B            &kp C_MUTE        &kp C_PLAY  &kp N           &kp M           &kp COMMA       &kp DOT         &kp MINUS       &kp RSHFT
                          &kp LGUI     &kp LALT        &kp LCTRL       &mo 1            &kp SPACE         &kp RET     &mo 2           &kp RALT        &kp RCTRL       &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
        };

        lower_layer {
            display-name = "Lower";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//                                             |  ¿ ¡  |  F1 |  F2 |  F3  |  F4  |  F5   |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
//                                             | `~    |     |     |  €   | prev | next  |                   |      |       |  UP   | HOME |  END  | Delet |
//                                             | CAPS  |  {  |  }  |  (   |  )   |       |                   |      | LEFT  | DOWN  | RIGHT|       |   |   |
//                                             |       |  -  |  +  |  [   |  ]   |  =    | RGBtog |  |       |      |       |  ;    |  :   |       |   \   |
//                                                           |     |      |      |       |        |  |       |      |       |       |      |
            bindings = <
&inverted_punct       &kp F1       &kp F2       &kp F3          &kp F4          &kp F5                                         &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11
&kp GRAVE    &trans       &trans       &euro_sign      &kp K_PREV      &kp K_NEXT                                     &trans          &trans          &kp UP          &kp HOME        &kp END         &kp DEL
&kp CAPS     &kp LBRC     &kp RBRC     &kp LS(N9)      &kp LS(N0)      &trans                                         &trans          &kp LEFT        &kp DOWN        &kp RIGHT       &trans          &kp PIPE
&trans       &kp MINUS    &kp KP_PLUS  &kp LBKT        &kp RBKT        &kp EQUAL        &rgb_ug RGB_TOG   &trans      &trans          &trans          &kp SEMI        &kp COLON       &trans          &kp BSLH
                          &trans       &trans          &trans          &trans           &trans            &trans      &trans          &trans          &trans          &trans
            >;

            sensor-bindings = <&rgb_encoder_bri &rgb_encoder_eff>;
        };

        raise_layer {
            display-name = "Raise";
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//                                             | BTCLR | BT1  | BT2  | BT3  | BT4  | BT5  |                  | RGBT | RGB- | RGB+ | BR-  |  BR+  | Supr  |
//                                             |OUT sel| INS  | PSCR | RGBT | RGB- | RGB+ |                  |      |  7   |  8   |  9   |   0   |       |
//                                             |       | ALT  | CTRL | SHFT |      | CAPS |                  |  *   |  4   |  5   |  6   |   /   |  '    |
//                                             |       | ZSTU | CUT  | COPY | PASTE|      |RGB_SAD|  |RGB_SAI|  +   |  1   |  2   |  3   |   -   |       |
//                                                            |      |      |      |      |       |  |       |      |      |  0   |      |
            bindings = <
&bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                                      &rgb_ug RGB_TOG &rgb_ug RGB_EFR &rgb_ug RGB_EFF &rgb_ug RGB_BRD &rgb_ug RGB_BRI &trans
&out OUT_TOG &kp INS      &kp PSCRN    &rgb_ug RGB_TOG &rgb_ug RGB_EFR &rgb_ug RGB_EFF                                   &trans          &kp N7          &kp N8          &kp N9          &kp N0          &trans
&trans       &kp LALT     &kp LCTRL    &kp LSHFT       &trans          &kp CAPS                                          &kp ASTRK       &kp N4          &kp N5          &kp N6          &kp SLASH       &kp SQT
&trans       &studio_unlock   &kp K_CUT    &kp K_COPY      &kp K_PASTE     &trans         &rgb_ug RGB_SAD   &rgb_ug RGB_SAI  &kp KP_PLUS     &kp N1          &kp N2          &kp N3          &kp MINUS       &trans
                          &trans       &trans          &trans          &trans         &trans            &trans           &trans          &trans          &kp N0          &trans
            >;                                                                                                   

            sensor-bindings = <&rgb_encoder_spd &rgb_encoder_hue>;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
// |        | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            display-name = "adjust";
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SPI &rgb_ug RGB_BRI &rgb_ug RGB_SAI
&trans            &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                         &none           &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SPD &rgb_ug RGB_BRD &rgb_ug RGB_SAD 
&none             &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                   &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none            &rgb_ug RGB_TOG &none  &none &none &none &none &none &none
                                  &none           &none           &none           &none            &none           &none  &none &none &none &none
            >;
        };

    };
};