name: ZMK Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
    
    steps:
      - name: Clean workspace cache
        run: echo "CACHE_BUSTER=$(date +%s)" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Debug repo layout
        run: |
          pwd
          ls -R | grep gen_kobject_list.py || true

      - name: Fix Python distutils issue
        run: |
          apt-get update
          apt-get install -y python3-pip
          pip3 install packaging --break-system-packages
          # Buscar y parchear el archivo en cualquier ubicación
          find . -name "gen_kobject_list.py" -type f -exec sed -i 's/from distutils.version import LooseVersion/from packaging.version import Version as LooseVersion/' {} \;
        
      - name: Clean zmk folder
        run: rm -rf zmk
        
      - name: West Init
        run: west init -l config
        
      - name: West Update
        run: west update
        
      - name: Patch PIM447 bindings and driver
        run: |
          echo "=== Copiando binding YAML ==="
          mkdir -p zmk/app/dts/bindings/sensor/
          cp config/pimoroni,trackball_pim447.yaml zmk/app/dts/bindings/sensor/
          echo "✅ Binding YAML copiado"
          
          echo "=== Parcheando driver para Zephyr 2.5 ==="
          # Buscar y parchear el driver para Zephyr 2.5 (sin soporte para propiedades booleanas)
          if [ -f zmk/app/src/mouse/trackball_pim447.c ]; then
            # Parche 1: Quitar DT_PROP para mode
            sed -i 's/static int mode = DT_PROP(DT_INST(0, pimoroni_trackball_pim447), mode);/static int mode = 0; \/\* default mode *\//' zmk/app/src/mouse/trackball_pim447.c
            # Parche 2: Quitar DT_LABEL obsoleto
            sed -i 's/const char \*label = DT_LABEL(DT_INST(0, pimoroni_trackball_pim447));/const char *label = "PIM447_TRACKBALL"; \/\* hardcoded *\//' zmk/app/src/mouse/trackball_pim447.c
            # Parche 3: Hardcodear propiedades booleanas
            sed -i 's/#define SWAP_AXES DT_PROP(DT_INST(0, pimoroni_trackball_pim447), swap_axes)/#define SWAP_AXES 0 \/\* disabled *\//' zmk/app/src/mouse/trackball_pim447.c
            sed -i 's/#define INVERT_MOVE_X DT_PROP(DT_INST(0, pimoroni_trackball_pim447), invert_move_x)/#define INVERT_MOVE_X 0 \/\* disabled *\//' zmk/app/src/mouse/trackball_pim447.c
            sed -i 's/#define INVERT_MOVE_Y DT_PROP(DT_INST(0, pimoroni_trackball_pim447), invert_move_y)/#define INVERT_MOVE_Y 0 \/\* disabled *\//' zmk/app/src/mouse/trackball_pim447.c
            sed -i 's/#define INVERT_SCROLL_X DT_PROP(DT_INST(0, pimoroni_trackball_pim447), invert_scroll_x)/#define INVERT_SCROLL_X 0 \/\* disabled *\//' zmk/app/src/mouse/trackball_pim447.c
            sed -i 's/#define INVERT_SCROLL_Y DT_PROP(DT_INST(0, pimoroni_trackball_pim447), invert_scroll_y)/#define INVERT_SCROLL_Y 0 \/\* disabled *\//' zmk/app/src/mouse/trackball_pim447.c
            echo "✅ Driver parcheado para Zephyr 2.5 (propiedades hardcodeadas)"
          else
            echo "⚠️  Driver no encontrado, puede que falle la compilación"
          fi
        
      - name: Verify ZMK custom files
        run: |
          echo "=== Verificando archivos personalizados ==="
          # Verificar que los archivos necesarios existen en el fork
          if [ -f zmk/app/include/dt-bindings/zmk/trackball_pim447.h ]; then
            echo "✅ trackball_pim447.h encontrado"
          else
            echo "❌ trackball_pim447.h no encontrado"
            exit 1
          fi
          
          if [ -f zmk/app/dts/bindings/sensor/pimoroni,trackball_pim447.yaml ]; then
            echo "✅ pimoroni,trackball_pim447.yaml encontrado"
          else
            echo "❌ pimoroni,trackball_pim447.yaml no encontrado"
            exit 1
          fi
          
          if [ -f config/boards/shields/sofle/sofle_left.overlay ]; then
            echo "✅ sofle_left.overlay encontrado"
            echo "=== Contenido del overlay ==="
            grep -n "mode\|compatible" config/boards/shields/sofle/sofle_left.overlay || true
          else
            echo "❌ sofle_left.overlay no encontrado"
            exit 1
          fi
        
      - name: Debug - Check ZMK remote
        run: |
          cd zmk
          git remote -v
          git rev-parse --abbrev-ref HEAD
        
      - name: Debug - Check for PIM447 driver
        run: |
          ls -R zmk/drivers | grep pim447 || echo "PIM447 driver not found"
        
      - name: West Zephyr export
        run: west zephyr-export
        
      - name: Debug - Check overlays
        run: |
          echo "=== Overlays encontrados ==="
          find ${GITHUB_WORKSPACE}/config -name "*.overlay" -type f
          echo "=== Contenido del overlay sofle ==="
          cat ${GITHUB_WORKSPACE}/config/boards/shields/sofle/sofle.overlay || true

      - name: Build LEFT (with PIM447)
        run: |
          west build -s zmk/app -b nice_nano_v2 -d build/left -- \
            -DSHIELD="sofle_left" \
            -DZMK_CONFIG="${GITHUB_WORKSPACE}/config"
        
      - name: Build RIGHT (with OLED)
        run: |
          west build -s zmk/app -b nice_nano_v2 -d build/right -- \
            -DSHIELD="sofle_right nice_oled" \
            -DZMK_CONFIG="${GITHUB_WORKSPACE}/config"
        
      - name: Verify PIM447
        run: |
          echo "=== Verificando PIM447 ==="
          if [ -f build/left/zephyr/zephyr.dts ]; then
            grep -n "pim447" build/left/zephyr/zephyr.dts && echo "✅ PIM447 encontrado" || echo "❌ PIM447 no encontrado"
          else
            echo "DTS file not found"
          fi
        
      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: |
            build/left/zephyr/zmk.uf2
            build/right/zephyr/zmk.uf2